openapi: 3.0.3
info:
  title: Storer Inventory API
  version: 1.0.0
  description: API for managing products, suppliers, transactions, and inventory,
    with an AI assistant.
servers:
  - url: http://localhost:8000
    description: Local development server
paths:
  /api/inventory_logs/:
    get:
      operationId: api_inventory_logs_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inventory'
          description: ''
    post:
      operationId: api_inventory_logs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
  /api/inventory_logs/{id}/:
    get:
      operationId: api_inventory_logs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory log.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    put:
      operationId: api_inventory_logs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory log.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Inventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Inventory'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    patch:
      operationId: api_inventory_logs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory log.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInventory'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'
          description: ''
    delete:
      operationId: api_inventory_logs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this inventory log.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/metrics/:
    get:
      operationId: api_metrics_retrieve
      description: Retrieves dashboard metrics (Total Sales, Profit, Transactions,
        Products), optionally filtered by product SKU.
      parameters:
      - in: path
        name: product_sku
        schema:
          type: string
        description: Optional SKU to filter metrics for a specific product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_sales:
                    type: number
                    format: float
                  total_profit:
                    type: number
                    format: float
                  total_transactions:
                    type: integer
                  total_products:
                    type: integer
                example:
                  total_sales: 12550.75
                  total_profit: 3150.5
                  total_transactions: 450
                  total_products: 58
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/products/{product_sku}/backtest/arima/{validation_horizon}/:
    get:
      operationId: api_products_backtest_arima_retrieve
      description: Performs backtesting for ARIMA demand forecast and retrieves evaluation
        metrics.
      parameters:
      - in: query
        name: arima_order_str
        schema:
          type: string
        description: Optional ARIMA order as p,d,q (e.g., '5,1,0')
      - in: path
        name: product_sku
        schema:
          type: string
        description: SKU of the product
        required: true
      - in: path
        name: validation_horizon
        schema:
          type: integer
        description: Backtesting horizon in periods (e.g., days)
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_details:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                  metrics:
                    type: object
                    properties:
                      mae:
                        type: number
                        format: float
                      rmse:
                        type: number
                        format: float
                  forecast:
                    type: array
                    items:
                      type: object
                      properties:
                        ds:
                          type: string
                          format: date-time
                        yhat:
                          type: number
                          format: float
                        yhat_lower:
                          type: number
                          format: float
                        yhat_upper:
                          type: number
                          format: float
                  arima_order_used:
                    type: array
                    items:
                      type: integer
                    example:
                    - 5
                    - 1
                    - 0
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/products/{product_sku}/backtest/prophet/{validation_horizon}/:
    get:
      operationId: api_products_backtest_prophet_retrieve
      description: Performs backtesting for Prophet demand forecast and retrieves
        evaluation metrics.
      parameters:
      - in: path
        name: product_sku
        schema:
          type: string
        required: true
      - in: path
        name: validation_horizon
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_details:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                  metrics:
                    type: object
                    properties:
                      mae:
                        type: number
                        format: float
                      rmse:
                        type: number
                        format: float
                  forecast:
                    type: array
                    items:
                      type: object
                      properties:
                        ds:
                          type: string
                          format: date-time
                        yhat:
                          type: number
                          format: float
                        yhat_lower:
                          type: number
                          format: float
                        yhat_upper:
                          type: number
                          format: float
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/products/{product_sku}/forecast/arima/{horizon}/:
    get:
      operationId: api_products_forecast_arima_retrieve
      description: Retrieves a demand forecast for a product using ARIMA.
      parameters:
      - in: query
        name: arima_order_str
        schema:
          type: string
        description: Optional ARIMA order as p,d,q (e.g., '5,1,0')
      - in: path
        name: horizon
        schema:
          type: integer
        description: Forecast horizon in periods (e.g., days)
        required: true
      - in: path
        name: product_sku
        schema:
          type: string
        description: SKU of the product
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_details:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                  forecast:
                    type: array
                    items:
                      type: object
                      properties:
                        ds:
                          type: string
                          format: date-time
                        yhat:
                          type: number
                          format: float
                        yhat_lower:
                          type: number
                          format: float
                        yhat_upper:
                          type: number
                          format: float
                  arima_order_used:
                    type: array
                    items:
                      type: integer
                    example:
                    - 5
                    - 1
                    - 0
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/products/{product_sku}/forecast/prophet/{horizon}/:
    get:
      operationId: api_products_forecast_prophet_retrieve
      description: Retrieves a demand forecast for a product using Prophet.
      parameters:
      - in: path
        name: horizon
        schema:
          type: integer
        required: true
      - in: path
        name: product_sku
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_details:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                  forecast:
                    type: array
                    items:
                      type: object
                      properties:
                        ds:
                          type: string
                          format: date-time
                        yhat:
                          type: number
                          format: float
                        yhat_lower:
                          type: number
                          format: float
                        yhat_upper:
                          type: number
                          format: float
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/sales_profit_trend/:
    get:
      operationId: api_sales_profit_trend_retrieve
      description: Retrieves monthly sales and profit trend data, optionally filtered
        by product SKU.
      parameters:
      - in: path
        name: product_sku
        schema:
          type: string
        description: Optional SKU to filter trend for a specific product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    month:
                      type: string
                      format: date
                    total_sales:
                      type: number
                      format: float
                    total_profit:
                      type: number
                      format: float
                example:
                - month: '2024-01-01'
                  total_sales: 5000.0
                  total_profit: 1200.5
                - month: '2024-02-01'
                  total_sales: 7550.75
                  total_profit: 1950.0
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/suppliers/:
    get:
      operationId: api_suppliers_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
    post:
      operationId: api_suppliers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/suppliers/{id}/:
    get:
      operationId: api_suppliers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: api_suppliers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: api_suppliers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: api_suppliers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/transactions/:
    get:
      operationId: api_transactions_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
          description: ''
    post:
      operationId: api_transactions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/transactions/{id}/:
    get:
      operationId: api_transactions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    put:
      operationId: api_transactions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: api_transactions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: api_transactions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Inventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        stock_change:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reason:
          type: string
          nullable: true
          maxLength: 255
        change_date:
          type: string
          format: date-time
          readOnly: true
        source:
          type: string
          nullable: true
          maxLength: 255
        product:
          type: integer
        user:
          type: integer
          nullable: true
      required:
      - change_date
      - id
      - product
      - stock_change
    PatchedInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        stock_change:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        reason:
          type: string
          nullable: true
          maxLength: 255
        change_date:
          type: string
          format: date-time
          readOnly: true
        source:
          type: string
          nullable: true
          maxLength: 255
        product:
          type: integer
        user:
          type: integer
          nullable: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reorder_point:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        category:
          type: string
          nullable: true
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        sku:
          type: string
          maxLength: 50
        min_stock_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        cost_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit:
          type: string
          maxLength: 20
        lead_time_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        discontinued:
          type: boolean
        image:
          type: string
          format: uri
          nullable: true
        supplier:
          type: integer
          nullable: true
          description: Primary supplier
    PatchedSupplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        contact_name:
          type: string
          nullable: true
          maxLength: 100
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        address:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        supplier_code:
          type: string
          nullable: true
          maxLength: 50
        payment_terms:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
          nullable: true
    PatchedTransaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        transaction_date:
          type: string
          format: date-time
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        customer_name:
          type: string
          nullable: true
          maxLength: 100
        transaction_id:
          type: string
          nullable: true
          maxLength: 50
        weather_condition:
          type: string
          nullable: true
          description: Weather condition on transaction date
          maxLength: 50
        is_holiday:
          type: boolean
          description: Is the transaction date a holiday?
        is_promotion:
          type: boolean
          description: Was there a promotion on the transaction date?
        product:
          type: integer
        supplier:
          type: integer
          nullable: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        user:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reorder_point:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        category:
          type: string
          nullable: true
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        sku:
          type: string
          maxLength: 50
        min_stock_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        cost_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit:
          type: string
          maxLength: 20
        lead_time_days:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        discontinued:
          type: boolean
        image:
          type: string
          format: uri
          nullable: true
        supplier:
          type: integer
          nullable: true
          description: Primary supplier
      required:
      - created_at
      - id
      - name
      - price
      - reorder_point
      - sku
    RoleEnum:
      enum:
      - admin
      - staff
      type: string
      description: |-
        * `admin` - Admin
        * `staff` - Staff
    Supplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        contact_name:
          type: string
          nullable: true
          maxLength: 100
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        address:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        supplier_code:
          type: string
          nullable: true
          maxLength: 50
        payment_terms:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
          nullable: true
      required:
      - created_at
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        transaction_date:
          type: string
          format: date-time
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        customer_name:
          type: string
          nullable: true
          maxLength: 100
        transaction_id:
          type: string
          nullable: true
          maxLength: 50
        weather_condition:
          type: string
          nullable: true
          description: Weather condition on transaction date
          maxLength: 50
        is_holiday:
          type: boolean
          description: Is the transaction date a holiday?
        is_promotion:
          type: boolean
          description: Was there a promotion on the transaction date?
        product:
          type: integer
        supplier:
          type: integer
          nullable: true
      required:
      - id
      - product
      - quantity
      - transaction_date
      - transaction_type
    TransactionTypeEnum:
      enum:
      - sale
      - purchase
      type: string
      description: |-
        * `sale` - Sale
        * `purchase` - Purchase
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
        user:
          type: integer
      required:
      - id
      - user
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
